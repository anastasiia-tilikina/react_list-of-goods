{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","this","className","onClick","setState","ALPHABET","type","classNames","LENGTH","map","item","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAClBC,EADkB,GAGd,IADFH,EACC,EADDA,SAAUD,EACT,EADSA,WAENK,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,IAAK,WACH,OAAOM,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAINV,EAAaK,EAAaM,UAAYN,GAzBjD,4CA4BE,WAAU,IAAD,OACP,EAGIO,KAAKb,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGII,EAAeO,KAAKT,kBAAkBN,EAAiBe,KAAKb,OAElE,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAM,EAAKC,SAAS,CAAEd,SAAUL,EAASoB,YAClDC,KAAK,SACLJ,UAAWK,IACT,SACA,UACA,CAAE,WAAyB,aAAbjB,IANlB,iCAYA,wBACEa,QAAS,kBAAM,EAAKC,SAAS,CAAEd,SAAUL,EAASuB,UAClDF,KAAK,SACLJ,UAAWK,IACT,SACA,aACA,CAAE,WAAyB,WAAbjB,IANlB,4BAYA,wBACEa,QAAS,kBAAM,EAAKC,UAClB,SAAAhB,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAEjCiB,KAAK,SACLJ,UAAWK,IACT,SACA,aACA,CAAE,YAAalB,IARnB,qBAee,SAAbC,IAAwBD,GAEtB,wBACEc,QAAS,kBAAM,EAAKC,SAClB,CAAEd,SAAUL,EAASM,KAAMF,YAAY,KAEzCiB,KAAK,SACLJ,UAAU,4BALZ,sBAYN,6BACGR,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA9FpC,GAAyBC,aC3BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d13cd495.chunk.js","sourcesContent":["/* eslint-disable default-case */\nimport { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: State,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case 'ALPHABET':\n          return a.localeCompare(b);\n\n        case 'LENGTH':\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    return isReversed ? visibleGoods.reverse() : visibleGoods;\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const visibleGoods = this.getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={() => this.setState({ sortType: SortType.ALPHABET })}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== 'ALPHABET' },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== 'LENGTH' },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={() => this.setState(\n              state => ({ isReversed: !state.isReversed }),\n            )}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n\n          >\n            Reverse\n          </button>\n\n          {(sortType === 'NONE' && !isReversed)\n            || (\n              <button\n                onClick={() => this.setState(\n                  { sortType: SortType.NONE, isReversed: false },\n                )}\n                type=\"button\"\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(item => (\n            <li data-cy=\"Good\" key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}